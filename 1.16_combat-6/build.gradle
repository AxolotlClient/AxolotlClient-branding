plugins {
	id 'io.github.juuxel.loom-quiltflower' version '1.8.+'
	id "fabric-loom" version "1.0.+"
}

group = maven_group
version = "${project.version}+${project.minecraft_cts8}"
archivesBaseName = "AxolotlClient"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
	maven {
		url = "https://moehreag.duckdns.org/maven/releases"
	}
	maven {
		name = 'CombatReforged'
		url = 'https://maven.fabric.rizecookey.net/'
	}
}

loom {
	setIntermediaryUrl('https://maven.fabric.rizecookey.net/net/fabricmc/intermediary/1.16_combat-6/intermediary-1.16_combat-6-v2.jar')
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_cts8}"
	mappings "net.fabricmc:yarn:${project.mappings_cts8}:v2"

	modImplementation "net.fabricmc:fabric-loader:${fabric_loader}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_cts8}"

	modImplementation ("io.github.axolotlclient:AxolotlClient-config:${project.config}+${project.minecraft_cts8}") {
		exclude group: "com.terraformersmc"
	}
	include "io.github.axolotlclient:AxolotlClient-config:${project.config}+${project.minecraft_cts8}"

	modCompileOnlyApi("com.terraformersmc:modmenu:1.15.0") // there is no working modmenu release for this version, but we still provide support for it just in case.

	implementation include(project(path: ":common", configuration: 'shadow'))

	implementation('com.github.JnCrMx:discord-game-sdk4j:v0.5.5')
}

processResources {
	inputs.property 'version', version

	filesMatching('fabric.mod.json') {
		expand "version": version
	}
}

runClient {
	classpath(sourceSets.test.runtimeClasspath)
}

java {
	withSourcesJar()
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			artifactId = archivesBaseName
			from components.java
		}
	}

	repositories {
		maven {
			name = "owlMaven"
			def repository = project.version.toString().contains("beta") || project.version.toString().contains("alpha") ? "snapshots" : "releases"
			url = "https://moehreag.duckdns.org/maven/"+repository
			credentials(PasswordCredentials)
			authentication {
				basic(BasicAuthentication)
			}
		}
	}
}

modrinth {
	token = System.getenv("MODRINTH_TOKEN")
	projectId = "p2rxzX0q"
	versionNumber = "${project.version}"
	versionType = "release"
	uploadFile = remapJar
	gameVersions = ["${project.minecraft_1192}"]
	loaders = ["fabric"]
	additionalFiles = [remapSourcesJar]
	dependencies {
		required.project "fabric-api"
	}

	// Changelog fetching: Credit LambdAurora.
	// https://github.com/LambdAurora/LambDynamicLights/blob/1ef85f486084873b5d97b8a08df72f57859a3295/build.gradle#L145
	// License: MIT
	def changelogText = file('../CHANGELOG.md').text
	def regexVersion = ((String) project.version).split("\\+")[0].replaceAll('\\.', /\\./).replaceAll('\\+', '\\+')
	def changelogRegex = ~"###? ${regexVersion}\\n\\n(( *- .+\\n)+)"
	def matcher = changelogText =~ changelogRegex

	if (matcher.find()) {
		def changelogContent = matcher.group(1)

		def changelogLines = changelogText.split('\n')
		def linkRefRegex = ~'^\\[([A-z0-9 _\\-/+.]+)]: '
		for (int i = changelogLines.length - 1; i > 0; i--) {
			def line = changelogLines[i]
			if ((line =~ linkRefRegex).find())
				changelogContent += '\n' + line
			else break
		}
		changelog = changelogContent
	} else {
		afterEvaluate {
			tasks.modrinth.setEnabled(false)
		}
	}
}
