plugins {
	id 'maven-publish'
	id 'org.quiltmc.loom' version '1.0.+'
	id "io.freefair.lombok" version "6.5.1"
	id 'com.modrinth.minotaur' version '2.+'
}

archivesBaseName = project.archives_base_name
version = project.version
group = project.maven_group

repositories {
	maven {
		url "https://moehreag.duckdns.org/maven/releases"
	}

	maven {
		url 'https://repo.hypixel.net/repository/Hypixel/'
	}

	maven {
		name 'TerraformersMC Maven'
		url 'https://maven.terraformersmc.com/releases/'
	}

	mavenLocal()
	maven { url 'https://jitpack.io' }
}

loom {
	accessWidenerPath = file("src/main/resources/axolotlclient.accesswidener")
}

dependencies {
	minecraft "com.mojang:minecraft:${minecraft_version}"
	mappings "org.quiltmc:quilt-mappings:${minecraft_version}+build.${quilt_mappings}:intermediary-v2"

	modImplementation "org.quiltmc:quilt-loader:${project.loader_version}"
	modImplementation "org.quiltmc.quilted-fabric-api:quilted-fabric-api:${quilted_fabric_api_version}"

	include(modImplementation "io.github.axolotlclient:AxolotlClient-config:1.0.12+1.19.2")

	modImplementation "com.terraformersmc:modmenu:4.0.5"

	include( implementation('com.github.JnCrMx:discord-game-sdk4j:0.5.5'))

	include(modImplementation("net.hypixel:hypixel-api-core:4.1") {
		exclude group: "com.google.code.gson", module: "gson"
		exclude group: "org.apache.httpcomponents", module: "httpclient"
	})

	include(modImplementation("net.hypixel:hypixel-api-transport-apache:4.1") {
		exclude group: "com.google.code.gson", module: "gson"
		exclude group: "org.apache.httpcomponents", module: "httpclient"
	})
}

processResources {
	inputs.property "version", version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Still required by IDEs such as Eclipse and Visual Studio Code
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

// If you plan to use a different file for the license, don't forget to change the file name here!
jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}" }
	}
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {
		maven {
			name = "owlMaven"
			url = "https://moehreag.duckdns.org/maven/releases"
			credentials(PasswordCredentials)
			authentication {
				basic(BasicAuthentication)
			}
		}
	}
}

modrinth {
	token = System.getenv("MODRINTH_TOKEN")
	projectId = "p2rxzX0q"
	versionNumber = "${project.version}"
	versionType = "release"
	uploadFile = remapJar
	gameVersions = ["${project.minecraft_version}"]
	loaders = ["quilt"]
	dependencies {
		required.project "qsl"
	}

	// Changelog fetching: Credit LambdAurora.
	// https://github.com/LambdAurora/LambDynamicLights/blob/1ef85f486084873b5d97b8a08df72f57859a3295/build.gradle#L145
	// License: MIT
	def changelogText = file('CHANGELOG.md').text
	def regexVersion = ((String) project.version).split("\\+")[0].replaceAll('\\.', /\\./).replaceAll('\\+', '\\+')
	def changelogRegex = ~"###? ${regexVersion}\\n\\n(( *- .+\\n)+)"
	def matcher = changelogText =~ changelogRegex

	if (matcher.find()) {
		def changelogContent = matcher.group(1)

		def changelogLines = changelogText.split('\n')
		def linkRefRegex = ~'^\\[([A-z0-9 _\\-/+.]+)]: '
		for (int i = changelogLines.length - 1; i > 0; i--) {
			def line = changelogLines[i]
			if ((line =~ linkRefRegex).find())
				changelogContent += '\n' + line
			else break
		}
		changelog = changelogContent
	} else {
		afterEvaluate {
			tasks.modrinth.setEnabled(false)
		}
	}
}
